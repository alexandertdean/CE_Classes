Alexander Dean
Homework 6

1. Code can be found at http://gitlab.eece.maine.edu:3000/alexander.dean/ax25.git

2.
#include <linux/init.h>
#include <linux/module.h>
MODULE_LICENSE("Dual BSD/GPL");

static int hello_init(void)
{
	printk(KERN_ALERT "Hello, world\n");	
	return 0;
}

static void hello_exit(void)
{
	printk(KERN_ALERT "Goodbye, cruel world\n");
}

module_init(hello_init);
module_exit(hello_exit);

Code was taken from Linux Device Drivers website

MAKEFILE:

ifneq ($(KERNELRELEASE),)
	obj-m := hello.o

else
	KERNELDIR ?= /lib/modules/`uname -r`/build/
	PWD := $(shell pwd)

default:
	$(MAKE) -C $(KERNELDIR) M=$(PWD) modules
install:
	$(MAKE) -C $(KERNELDIR) M=$(PWD) modules_install
clean:
	$(MAKE) -C $(KERNELDIR) M=$(PWD) clean
endif

Commands used to install.
sudo insmod hello.ko -> Hello, world
sudo rmmod hello.ko -> Goodbye, cruel world

3. 
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <signal.h>

int main() 
{
	pid_t child_pid;

	child_pid = fork();				//creates child, process ID stored in child_pid
	if (child_pid > 0) {				//parent value of child_pid > 0
		kill(child_pid, SIGTERM);		//sends termination signal to child
		sleep(10);				//waits 10 seconds
		exit(0);
	}
	else {
		sleep(10);				//child value of child_pid = 0, infinitely delays
	}
	return 0;
}

Commands:

./zombie &
ps -e -o pid,stat,cmd

Output:

8869 Z <defunct>
